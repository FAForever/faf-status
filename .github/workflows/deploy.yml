name: Deploy

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "The environment to deploy to"
        required: true
        default: "status.faforever.com"
      gitRef:
        description: "The git ref to deploy"
        required: true
        default: "refs/heads/main"

jobs:
  deploy_mj:
    name: Deploy
    environment:
      name: ${{ github.event.inputs.environment }}
      url: ${{ steps.service-url.outputs.url }}
    runs-on: ubuntu-latest
    steps:
      - name: Set service URL
        id: service-url
        run: echo "::set-output name=url::${{ secrets.SERVICE_URL }}"

      - name: Checkout code
        uses: actions/checkout@master
        with:
          ref: ${{ github.event.inputs.gitRef }}

      - name: Upload docker-compose.yml
        uses: appleboy/scp-action@8a54b394594637844fcf9ec5cab3eb97ce5dedae
        with:
          host: ${{ secrets.TARGET_HOSTS }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          passphrase: ${{ secrets.SSH_PRIVATE_KEY_PASSPHRASE }}
          fingerprint: ${{ secrets.SSH_FINGERPRINT }}
          source: "docker-compose.yml,.env.template"
          target: ${{ secrets.TARGET_DIR }}

      - name: Deploy application
        uses: appleboy/ssh-action@1a8b3784eaa665f677fa114edd5683bb6a6bfaa8
        with:
          host: ${{ secrets.TARGET_HOSTS }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          passphrase: ${{ secrets.SSH_PRIVATE_KEY_PASSPHRASE }}
          fingerprint: ${{ secrets.SSH_FINGERPRINT }}
          script: |
            cd "${{ secrets.TARGET_DIR }}"
            test -f docker-compose.yml && docker-compose stop
            cat << EOF > .env
            DOMAIN_NAME=${{ secrets.DOMAIN_NAME }}
            SERVICE_URL=${{ secrets.SERVICE_URL }}
            ADMIN_PASSWORD=${{ secrets.ADMIN_PASSWORD }}
            ADMIN_EMAIL=${{ secrets.ADMIN_EMAIL }}
            EOF
            docker-compose up -d
