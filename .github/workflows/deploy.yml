name: Deploy

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "The environment to deploy to"
        required: true
        default: "status.faforever.com"
      gitRef:
        description: "The git ref to deploy"
        required: true
        default: "refs/heads/main"

jobs:
  deploy_mj:
    name: Deploy
    environment:
      name: ${{ github.event.inputs.environment }}
      url: https://${{ github.event.inputs.environment }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@master
        with:
          ref: ${{ github.event.inputs.gitRef }}

      - name: Upload docker-compose.yml
        uses: appleboy/scp-action@8a54b394594637844fcf9ec5cab3eb97ce5dedae
        with:
          host: status.faf.micheljung.ch
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          passphrase: ${{ secrets.SSH_PRIVATE_KEY_PASSPHRASE }}
          fingerprint: ${{ secrets.SSH_FINGERPRINT }}
          source: "docker-compose.yml,.env.template"
          target: ${{ secrets.TARGET_DIR }}

      - name: Deploy application
        uses: appleboy/ssh-action@1a8b3784eaa665f677fa114edd5683bb6a6bfaa8
        with:
          host: status.faf.micheljung.ch
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          passphrase: ${{ secrets.SSH_PRIVATE_KEY_PASSPHRASE }}
          fingerprint: ${{ secrets.SSH_FINGERPRINT }}
          script: |
            cd "${{ secrets.TARGET_DIR }}"
            test -f docker-compose.yml && docker-compose stop
            cat << EOF > .env
            DOMAIN_NAME=${{ github.event.inputs.environment }}
            SERVICE_URL=https://${{ github.event.inputs.environment }}
            ADMIN_PASSWORD=${{ secrets.ADMIN_PASSWORD }}
            ADMIN_EMAIL=${{ secrets.ADMIN_EMAIL }}
            API_SECRET=${{ secrets.API_SECRET }}
            EOF
            docker-compose up -d

            tries=10
            until services=$(sqlite3 data/statping/statping.db "select count(*) from services")
            do
               sleep 1
               [[ tries -lt 1 ]] && echo "Could not read statping.db" && exit 1
               ((tries--))
            done

            test $services -gt 0 || \
              API_URL=https://${{ github.event.inputs.environment }}/api \
              API_SECRET=${{ secrets.API_SECRET }} \
              python3 init.py
